{
  "_args": [
    [
      {
        "raw": "mkdirp-promise@^4.0.0",
        "scope": null,
        "escapedName": "mkdirp-promise",
        "name": "mkdirp-promise",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "/Users/markvalentine/Rippl/Zinnia2/zinnia-stories/functions"
    ]
  ],
  "_from": "mkdirp-promise@>=4.0.0 <5.0.0",
  "_id": "mkdirp-promise@4.0.1",
  "_inCache": true,
  "_location": "/mkdirp-promise",
  "_nodeVersion": "4.6.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/mkdirp-promise-4.0.1.tgz_1478656174630_0.5391455905046314"
  },
  "_npmUser": {
    "name": "ahmadnassri",
    "email": "ahmad@ahmadnassri.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mkdirp-promise@^4.0.0",
    "scope": null,
    "escapedName": "mkdirp-promise",
    "name": "mkdirp-promise",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mkdirp-promise/-/mkdirp-promise-4.0.1.tgz",
  "_shasum": "2723b347831b9a400c43bdf21fbb767f7f9a1e09",
  "_shrinkwrap": null,
  "_spec": "mkdirp-promise@^4.0.0",
  "_where": "/Users/markvalentine/Rippl/Zinnia2/zinnia-stories/functions",
  "author": {
    "name": "Ahmad Nassri",
    "email": "ahmad@ahmadnassri.com",
    "url": "https://www.ahmadnassri.com/"
  },
  "bugs": {
    "url": "https://github.com/ahmadnassri/mkdirp-promise/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "description": "Promise version of mkdirp",
  "devDependencies": {
    "babel-cli": "^6.11.4",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-env": "0.0.7",
    "babel-register": "^6.11.6",
    "codeclimate-test-reporter": "^0.4.0",
    "cz-conventional-changelog": "^1.2.0",
    "echint": "^1.5.3",
    "rimraf": "^2.5.4",
    "semantic-release": "^4.3.5",
    "snazzy": "^5.0.0",
    "tap": "^8.0.0",
    "tap-mocha-reporter": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "2723b347831b9a400c43bdf21fbb767f7f9a1e09",
    "tarball": "https://registry.npmjs.org/mkdirp-promise/-/mkdirp-promise-4.0.1.tgz"
  },
  "echint": {
    "ignore": [
      "lib/**"
    ]
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "lib",
    "src"
  ],
  "gitHead": "8da6d72960477d8e5a99e990e96394c6b84b3959",
  "homepage": "https://github.com/ahmadnassri/mkdirp-promise",
  "keywords": [
    "mkdirp",
    "promise"
  ],
  "license": "ISC",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "ahmadnassri",
      "email": "ahmad@ahmadnassri.com"
    }
  ],
  "name": "mkdirp-promise",
  "optionalDependencies": {},
  "peerDependencies": {
    "mkdirp": ">=0.5.0"
  },
  "readme": "# mkdirp-promise [![version][npm-version]][npm-url] [![License][npm-license]][license-url]\n\n[Promise] version of [mkdirp]:\n\n> Like mkdir -p, but in node.js!\n\n[![Build Status][travis-image]][travis-url]\n[![Downloads][npm-downloads]][npm-url]\n[![Code Climate][codeclimate-quality]][codeclimate-url]\n[![Coverage Status][codeclimate-coverage]][codeclimate-url]\n[![Dependencies][david-image]][david-url]\n\n## Install\n\n```bash\nnpm install --production --save mkdirp-promise\n```\n\n## Usage\n\nI recommend using an optimized build matching your Node.js environment version, otherwise, the standard `require` would work just fine with any version of Node `>= v4.0` .\n\n```js\n/*\n * Node 7\n */\nconst mkdirp = require('mkdirp-promise/lib/node7')\n\n/*\n * Node 6\n */\nconst mkdirp = require('mkdirp-promise/lib/node6')\n\n/*\n * Node 5\n */\nvar mkdirp = require('mkdirp-promise/lib/node5')\n\n/*\n * Node 4 (Default)\n * Note: additional ES2015 polyfills may be required\n */\nvar mkdirp = require('mkdirp-promise')\n```\n\n## API\n\n```js\nconst mkdirp = require('mkdirp-promise')\n```\n\n### mkdirp(dir, [, options])\n\n*pattern*: `String`  \n*options*: `Object` or `String`  \nReturn: `Object` ([Promise])\n\nWhen it finishes, it will be [*fulfilled*](http://promisesaplus.com/#point-26) with the first directory made that had to be created, if any.\n\nWhen it fails, it will be [*rejected*](http://promisesaplus.com/#point-30) with an error as its first argument.\n\n```js\nmkdirp('/tmp/foo/bar/baz')\n  .then(console.log) //=> '/tmp/foo'\n  .catch(console.error)\n```\n\n#### options\n\nThe option object will be directly passed to [mkdirp](https://github.com/substack/node-mkdirp#mkdirpdir-opts-cb).\n\n----\n> :copyright: [www.ahmadnassri.com](https://www.ahmadnassri.com/) &nbsp;&middot;&nbsp;\n> License: [ISC](LICENSE) &nbsp;&middot;&nbsp;\n> Github: [@ahmadnassri](https://github.com/ahmadnassri) &nbsp;&middot;&nbsp;\n> Twitter: [@ahmadnassri](https://twitter.com/ahmadnassri)\n\n[license-url]: http://choosealicense.com/licenses/isc/\n\n[travis-url]: https://travis-ci.org/ahmadnassri/mkdirp-promise\n[travis-image]: https://img.shields.io/travis/ahmadnassri/mkdirp-promise.svg?style=flat-square\n\n[npm-url]: https://www.npmjs.com/package/mkdirp-promise\n[npm-license]: https://img.shields.io/npm/l/mkdirp-promise.svg?style=flat-square\n[npm-version]: https://img.shields.io/npm/v/mkdirp-promise.svg?style=flat-square\n[npm-downloads]: https://img.shields.io/npm/dm/mkdirp-promise.svg?style=flat-square\n\n[codeclimate-url]: https://codeclimate.com/github/ahmadnassri/mkdirp-promise\n[codeclimate-quality]: https://img.shields.io/codeclimate/github/ahmadnassri/mkdirp-promise.svg?style=flat-square\n[codeclimate-coverage]: https://img.shields.io/codeclimate/coverage/github/ahmadnassri/mkdirp-promise.svg?style=flat-square\n\n[david-url]: https://david-dm.org/ahmadnassri/mkdirp-promise\n[david-image]: https://img.shields.io/david/ahmadnassri/mkdirp-promise.svg?style=flat-square\n\n[mkdirp]: https://github.com/substack/node-mkdirp\n[Promise]: http://promisesaplus.com/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ahmadnassri/mkdirp-promise.git"
  },
  "scripts": {
    "codeclimate": "nyc report --reporter=text-lcov | codeclimate-test-reporter",
    "compile": "babel -q src",
    "coverage": "BABEL_ENV=test tap test/*.js --coverage --nyc-arg=--require --nyc-arg=babel-register",
    "pretest": "snazzy && echint",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "BABEL_ENV=test tap test/*.js --node-arg=--require --node-arg=babel-register | tap-mocha-reporter spec"
  },
  "standard": {
    "ignore": [
      "lib/**"
    ]
  },
  "version": "4.0.1"
}
